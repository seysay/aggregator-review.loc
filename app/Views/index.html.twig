{% extends 'base.html.twig' %}
{% block title %}{% endblock %}
{% block content %}
<div class="container">
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-8">
            <h2>Aggregator Review</h2>
{#            <a href="/" class="btn btn-outline-light active" role="button" data-bs-toggle="button" aria-pressed="true">Home</a>#}
            <a href="/create" class="btn btn-outline-primary active" role="button" data-bs-toggle="button" aria-pressed="true">Create</a>
        </div>
    </div>
<table class="table" id="myTable2">
    <thead class="thead-dark">
    <tr>
        <th scope="col" onclick="sortTable(0)">ID</th>
        <th scope="col" onclick="sortTable(1)">Name</th>
        <th scope="col">Image</th>
        <th scope="col" onclick="sortTable(2)">Price</th>
        <th scope="col"onclick="sortTable(3)">NameAuthorGoods</th>
        <th scope="col">ACTION</th>
    </tr>
    </thead>
    {% for info in data %}
    <tbody>
    <tr>
        <th scope="row">{{ info.id }}</th>
        <td><a href="show/{{ info.id }}">{{ info.name }}</a></td>
        <td>
            <img class="img-thumbnail" width="100" height="100" src="{{ info.little_img }}">
        </td>
        <td>{{ info.price }}</td>
        <td>{{ info.name_author_goods }}</td>
        <td>
            <a href="reviews/{{ info.id }}" class="btn btn-outline-secondary active" role="button" data-bs-toggle="button" aria-pressed="true">Reviews</a>
            <a href="edit/{{ info.id }}" class="btn btn-outline-success active" role="button" data-bs-toggle="button" aria-pressed="true">Edit</a>
            <a href="delete/{{ info.id }}" class="btn btn-outline-danger active" role="button" data-bs-toggle="button" aria-pressed="true">Delete</a>
        </td>
    </tr>
    </tbody>
    {% endfor %}
</table>
</div>
    {% block javascripts %}
        <script>
            function sortTable(n) {
                var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                table = document.getElementById("myTable2");
                switching = true;
                // Set the sorting direction to ascending:
                dir = "asc";
                /* Make a loop that will continue until
                no switching has been done: */
                while (switching) {
                    // Start by saying: no switching is done:
                    switching = false;
                    rows = table.rows;
                    /* Loop through all table rows (except the
                    first, which contains table headers): */
                    for (i = 1; i < (rows.length - 1); i++) {
                        // Start by saying there should be no switching:
                        shouldSwitch = false;
                        /* Get the two elements you want to compare,
                        one from current row and one from the next: */
                        x = rows[i].getElementsByTagName("TD")[n];
                        y = rows[i + 1].getElementsByTagName("TD")[n];
                        /* Check if the two rows should switch place,
                        based on the direction, asc or desc: */
                        if (dir == "asc") {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                // If so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        } else if (dir == "desc") {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                // If so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                    if (shouldSwitch) {
                        /* If a switch has been marked, make the switch
                        and mark that a switch has been done: */
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        // Each time a switch is done, increase this count by 1:
                        switchcount ++;
                    } else {
                        /* If no switching has been done AND the direction is "asc",
                        set the direction to "desc" and run the while loop again. */
                        if (switchcount == 0 && dir == "asc") {
                            dir = "desc";
                            switching = true;
                        }
                    }
                }
            }
        </script>
    {% endblock %}
{% endblock %}
